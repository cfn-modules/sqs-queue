---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'cfn-modules: AWS SQS queue'
# cfn-modules:implements(ExposeArn, ExposeName, LambdaDependency)
Parameters:
  AlertingModule:
    Description: 'Optional but recommended stack name of alerting module.'
    Type: String
    Default: ''
  KmsKeyModule:
    Description: 'Optional but recommended stack name of kms-key module.'
    Type: String
    Default: ''
  DelaySeconds:
    Description: 'The time in seconds that the delivery of all messages in the queue is delayed'
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 900
  KmsDataKeyReusePeriodSeconds:
    Description: 'The length of time in seconds that Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again'
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 86400
  MaximumMessageSize:
    Description: 'The limit of how many bytes that a message can contain before Amazon SQS rejects it'
    Type: Number
    Default: 262144
    MinValue: 1024
    MaxValue: 262144
  MessageRetentionPeriod:
    Description: 'The number of seconds that Amazon SQS retains a message'
    Type: Number
    Default: 345600
    MinValue: 60
    MaxValue: 1209600
  ReceiveMessageWaitTimeSeconds:
    Description: "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, as opposed to returning an empty response if a message isn't yet available"
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 20
  VisibilityTimeout:
    Description: 'The length of time during which a message will be unavailable after a message is delivered from the queue'
    Type: Number
    Default: 30
    MinValue: 0
    MaxValue: 43200
Conditions:
  HasAlertingModule: !Not [!Equals [!Ref AlertingModule, '']]
  HasKmsKeyModule: !Not [!Equals [!Ref KmsKeyModule, '']]
Resources:
  Queue:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: !Ref DelaySeconds
      KmsMasterKeyId: !If [HasKmsKeyModule, {'Fn::ImportValue': !Sub '${KmsKeyModule}-Arn'}, !Ref 'AWS::NoValue']
      KmsDataKeyReusePeriodSeconds: !If [HasKmsKeyModule, !Ref KmsDataKeyReusePeriodSeconds, !Ref 'AWS::NoValue']
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt 'DeadLetterQueue.Arn'
        maxReceiveCount: 5
      VisibilityTimeout: !Ref VisibilityTimeout
  QueueTooHighAlarm:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      AlarmDescription: 'Queue contains messages older than 10 minutes, messages are not consumed'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: QueueName
        Value: !GetAtt 'Queue.QueueName'
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: 'AWS/SQS'
      OKActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      Period: 60
      Statistic: Maximum
      Threshold: 600
  DeadLetterQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      KmsMasterKeyId: !If [HasKmsKeyModule, {'Fn::ImportValue': !Sub '${KmsKeyModule}-Arn'}, !Ref 'AWS::NoValue']
      KmsDataKeyReusePeriodSeconds: !If [HasKmsKeyModule, !Ref KmsDataKeyReusePeriodSeconds, !Ref 'AWS::NoValue']
  DeadLetterQueueTooHighAlarm:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      AlarmDescription: 'Dead letter queue contains messages, message processing failed'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: QueueName
        Value: !GetAtt 'DeadLetterQueue.QueueName'
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: 'AWS/SQS'
      OKActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      Period: 60
      Statistic: Sum
      Threshold: 0
Outputs:
  ModuleId:
    Value: 'sqs-queue'
  ModuleVersion:
    Value: '0.0.7'
  StackName:
    Value: !Ref 'AWS::StackName'
  Arn:
    Value: !GetAtt 'Queue.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-Arn'
  IamActions:
    Value: 'sqs:ChangeMessageVisibility*,sqs:DeleteMessage*,sqs:ReceiveMessage,sqs:SendMessage*'
    Export:
      Name: !Sub '${AWS::StackName}-IamActions'
  IamResources:
    Value: !GetAtt 'Queue.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-IamResources'
  Url:
    Value: !Ref Queue
    Export:
      Name: !Sub '${AWS::StackName}-Url'
  Name:
    Value: !GetAtt 'Queue.QueueName'
    Export:
      Name: !Sub '${AWS::StackName}-Name'
  DeadLetterQueueUrl:
    Value: !Ref DeadLetterQueue
    Export:
      Name: !Sub '${AWS::StackName}-DeadLetterQueueUrl'
  DeadLetterQueueArn:
    Value: !GetAtt 'DeadLetterQueue.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-DeadLetterQueueArn'
  DeadLetterQueueName:
    Value: !GetAtt 'DeadLetterQueue.QueueName'
    Export:
      Name: !Sub '${AWS::StackName}-DeadLetterQueueName'
